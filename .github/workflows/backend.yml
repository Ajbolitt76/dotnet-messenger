name: backend

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-backend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v2
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Setup sonar
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH=\"$PATH:$HOME/.dotnet/tools\"
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x 
      - name: Build in Debug mode
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"Ajbolitt76_dotnet-messenger" /o:"ajbolitt76" /d:"sonar.token=${SONAR_TOKEN}" /d:"sonar.host.url=https://sonarcloud.io"
          dotnet build
          dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
        working-directory: backend/Messenger/Messenger.Api
      - name: Tests
        run: dotnet test --no-build
        working-directory: backend/Messenger/Messenger.Api
        
  build-docker:
    runs-on: ubuntu-latest
    needs: [ test ]
    if:
      contains('
      refs/heads/main
      ', github.ref)
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          file: backend/Messenger/Messenger.Api/Dockerfile
          context: backend/Messenger
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}