name: "Deploy"

on:
  workflow_dispatch:
    inputs:
      frontend:
        description: 'Deploy frontend'
        required: false
        type: boolean
      backend:
        description: 'Deploy backend'
        required: false
        type: boolean

jobs:
  frontend:
    name: "Deploy frontend"
    runs-on: ubuntu-latest
    if: ${{ inputs.frontend == true }}
    steps:
      - name: Set up WireGuard
        uses: egor-tensin/setup-wireguard@v1
        with:
          endpoint: '${{ secrets.VPN_IP }}'
          endpoint_public_key: '${{ secrets.VPN_PK }}'
          ips: '${{ secrets.VPN_IPS }}'
          allowed_ips: '${{ secrets.VPN_ALLOWED_IPS }}'
          private_key: '${{ secrets.VPN_PRIVATE }}'
          preshared_key: '${{ secrets.VPN_PRESHARED }}'
  
  backend:
    name: "Deploy backend"
    runs-on: ubuntu-latest
    if: ${{ inputs.backend == true }}
    steps:
      - name: Set up WireGuard
        uses: egor-tensin/setup-wireguard@v1
        with:
          endpoint: '${{ secrets.VPN_IP }}'
          endpoint_public_key: '${{ secrets.VPN_PK }}'
          ips: '${{ secrets.VPN_IPS }}'
          allowed_ips: '${{ secrets.VPN_ALLOWED_IPS }}'
          private_key: '${{ secrets.VPN_PRIVATE }}'
          preshared_key: '${{ secrets.VPN_PRESHARED }}'
      - name: SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.INTERNAL_SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "${{ github.run_id }}" | cat > github.txt